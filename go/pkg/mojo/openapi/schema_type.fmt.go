// Code generated by mojo. DO NOT EDIT.
// Rerunning mojo will overwrite this file.
//
// Copyright 2021 Mojo-lang.org
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package openapi

import (
	"strconv"
)

var SchemaTypeNames = map[int32]string{
	1:  "null",
	2:  "integer",
	3:  "number",
	4:  "string",
	5:  "boolean",
	10: "array",
	11: "object",
}

var SchemaTypeValues = map[string]Schema_Type{
	"null":    Schema_TYPE_NULL,
	"integer": Schema_TYPE_INTEGER,
	"number":  Schema_TYPE_NUMBER,
	"string":  Schema_TYPE_STRING,
	"boolean": Schema_TYPE_BOOLEAN,
	"array":   Schema_TYPE_ARRAY,
	"object":  Schema_TYPE_OBJECT,
}

func (x Schema_Type) Format() string {
	s, ok := SchemaTypeNames[int32(x)]
	if ok {
		return s
	}
	if int(x) == 0 {
		return "unspecified"
	}
	return strconv.Itoa(int(x))
}

func (x *Schema_Type) Parse(value string) error {
	if x != nil {
		s, ok := SchemaTypeValues[value]
		if ok {
			*x = s
		} else {
			*x = Schema_TYPE_NULL
		}
	} else {
		*x = Schema_TYPE_NULL
	}
	return nil
}
